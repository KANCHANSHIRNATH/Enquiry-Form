Q1. Query all columns for all American cities in the CITY table with populations larger than 100000.
The CountryCode for America is USA.
Ans.

select * from city where name = "USA" and population > 100000;
***********************************************************************************************************************************************************************

Q2. Query the NAME field for all American cities in the CITY table with populations larger than 120000.
The CountryCode for America is USA.
Ans.

select name from city where name = "USA" andPopulation>120000;
**********************************************************************************************************************************************************************
Q3. . Query all columns (attributes) for every row in the CITY table.
Ans. 

select * from city;
************************************************************************************************************************************************************************
Q4. Query all columns for a city in CITY with the ID 1661.
Ans.

select * from city where ID = 1661;
************************************************************************************************************************************************************************
Q5. Query all attributes of every Japanese city in the CITY table. The COUNTRYCODE for Japan is
JPN.
select * from city where name = "JPN";
**************************************************************************************************************************************************************************
Q6. Query a list of CITY and STATE from the STATION table.
Ans.
select city, state from station;
**********************************************************************************************************************************************************************
Q7. Query a list of CITY names from STATION for cities that have an even ID number. Print the results
in any order, but exclude duplicates from the answer.
Ans.
SELECT CITY
FROM STATION
WHERE MOD(ID, 2) = 0
**********************************************************************************************************************************************************************
Q8. Find the difference between the total number of CITY entries in the table and the number of
distinct CITY entries in the table.
where LAT_N is the northern latitude and LONG_W is the western longitude.
For example, if there are three records in the table with CITY values 'New York', 'New York', 'Bengalaru',
there are 2 different city names: 'New York' and 'Bengalaru'. The query returns , because total number
of records - number of unique city names = 3-2 =1
Ans. 

select count(city) - count(distinct city) from station;
******************************************************************************************************************************************************************
Q9. Query the two cities in STATION with the shortest and longest CITY names, as well as their
respective lengths (i.e.: number of characters in the name). If there is more than one smallest or
largest city, choose the one that comes first when ordered alphabeticall
where LAT_N is the northern latitude and LONG_W is the western longitude.
Sample Input
For example, CITY has four entries: DEF, ABC, PQRS and WXY.
Sample Output
ABC 3
PQRS 4

Ans.
select top 1 city, len(city) from station order by len(city) ASC, city ASC; 
select top 1 city, len(city) from station order by len(city) DESC, city ASC;
**********************************************************************************************************************************************************************
Q10. Query the list of CITY names starting with vowels (i.e., a, e, i, o, or u) from STATION. Your result
cannot contain duplicates.

Ans. select distinct city from station where city like 'A%' or city like 'E%' or city like 'I%' or city like 'O%' or city like 'U%' And  city like 'a%' or
     city like 'e%' or city like 'i%' or city like 'o%' or city like 'u%';
***********************************************************************************************************************************************************************
Q11. Query the list of CITY names ending with vowels (a, e, i, o, u) from STATION. Your result cannot
contain duplicates.
Ans.
     select distinct city from station where city like '%A' or city like '%E' or city like '%I' or city like '%O' or city like '%U' And  city like '%a' or
     city like '%e' or city like '%i' or city like '%o' or city like '%u';
************************************************************************************************************************************************************************
Q12. Query the list of CITY names from STATION that do not start with vowels. Your result cannot
contain duplicates
Ans.
 select distinct city from station where city not like 'A%' or city not like 'E%' or city not like 'I%' or city not like 'O%' or city not like 'U%' And  city not like 'a%' or
     city not like 'e%' or city not like 'i%' or city not like 'o%' or city not like 'u%';
*********************************************************************************************************************************************************************************
Q13. Query the list of CITY names from STATION that do not end with vowels. Your result cannot
contain duplicates.
Ans.
select distinct city from station where city not like '%A' or city not like '%E' or city not like '%I' or city not like '%O' or city not like '%U' And  city not like '%a' or
     city not like '%e' or city not like '%i' or city not like '%o' or city not like '%u';
*****************************************************************************************************************************************************************************************
Q14. Query the list of CITY names from STATION that either do not start with vowels or do not end
with vowels. Your result cannot contain duplicates.
Ans.

select distinct city from station where city not like 'A%' or city not like 'E%' or city not like 'I%' or city not like 'O%' or city not like 'U%' or
     select distinct city from station where city not like '%A' or city not like '%E' or city not like '%I' or city not like '%O' or city not like '%U';
***********************************************************************************************************************************************************************
Q15. Query the names of all the Japanese cities in the CITY table. The COUNTRYCODE for Japan is
JPN.
Ans.
select name from where name = "JPN";
********************************************************************************************************************************************************************************************
16. Query the list of CITY names from STATION that do not start with vowels and do not end with
vowels. Your result cannot contain duplicates
Ans.
select distinct city from station where city not like 'A%' or city not like 'E%' or city not like 'I%' or city not like 'O%' or city not like 'U%' and
     select distinct city from station where city not like '%A' or city not like '%E' or city not like '%I' or city not like '%O' or city not like '%U';
********************************************************************************************************************************************************************
Q17. This table has no primary key, it can have repeated rows. product_id is a foreign key to the Product table.
Each row of this table contains some information about one sale. Write an SQL query that reports the products that were only sold in the first quarter of 2019. That is,
between 2019-01-01 and 2019-03-31 inclusive.
Return the result table in any order.
Ans. 
SELECT product_id, 
       product_name 
FROM   product 
WHERE  product_id NOT IN (SELECT product_id 
                          FROM   sales 
                          WHERE  sale_date NOT BETWEEN 
                                 '2019-01-01' AND '2019-03-31'); 

select p.product_id, p.product_name
from Product p
left join Sales s
on p.product_id = s.product_id
group by p.product_id
having sum(s.sale_date between '2019-01-01' and '2019-03-31') = count(s.sale_date)
***********************************************************************************************************************************************************************
Q18. There is no primary key for this table, it may have duplicate rows.
Each row of this table indicates that some viewer viewed an article (written by some author) on some
date.
Note that equal author_id and viewer_id indicate the same person.
Write an SQL query to find all the authors that viewed at least one of their own articles.
Return the result table sorted by id in ascending order

Ans. 
select author_id as id
from Views
where author_id = viewer_id
group by id
order by id
********************************************************************************************************************************************************************************
Q19. delivery_id is the primary key of this table.
The table holds information about food delivery to customers that make orders at some date and
specify a preferred delivery date (on the same order date or after it).
If the customer's preferred delivery date is the same as the order date, then the order is called
immediately; otherwise, it is called scheduled.
Write an SQL query to find the percentage of immediate orders in the table, rounded to 2 decimal
places
select round(100*d2.immediate_orders/count(d1.delivery_id), 2) as immediate_percentage
from Delivery d1,
    (select count(order_date) as immediate_orders
    from Delivery 
    where (order_date = customer_pref_delivery_date)) d2
****************************************************************************************************************************************************************************
Q20. (ad_id, user_id) is the primary key for this table.
Each row of this table contains the ID of an Ad, the ID of a user, and the action taken by this user
regarding this Ad.
The action column is an ENUM type of ('Clicked', 'Viewed', 'Ignored').
A company is running Ads and wants to calculate the performance of each Ad.Write an SQL query to find the ctr of each Ad. Round ctr to two decimal points.
Return the result table ordered by ctr in descending order and by ad_id in ascending order in case of a
tie.
Ans. 
select ad_id,
ifnull(
    round(employee_id is the primary key for this table.
Each row of this table contains the ID of each employee and their respective team.
Write an SQL query to find the team size of each of the employees.
Return result table in any order.
The query result format is in the following example.
Ans.

        avg(
            case
                when action = "Clicked" then 1
                when action = "Viewed" then 0
                else null
            end
        ) * 100,
    2),
0)
as ctr
from Ads
group by ad_id
order by ctr desc, ad_id asc;
***********************************************************************************************************************************************************************
Q21. employee_id is the primary key for this table.
Each row of this table contains the ID of each employee and their respective team.
Write an SQL query to find the team size of each of the employees.
Return result table in any order.
The query result format is in the following example.
Ans.
select e.employee_id, (select count(team_id) from Employee where e.team_id = team_id) as team_size
from Employee e

OR

SELECT employee_id, COUNT(team_id) OVER (PARTITION BY team_id) team_size
FROM Employee
*********************************************************************************************************************************************************************






















